name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-validate:
    name: Lint and Validate Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Create reports directory
      run: mkdir -p reports
        
    - name: Lint HTML
      run: npm run lint:html
      continue-on-error: true
      
    - name: Lint CSS
      run: npm run lint:css
      continue-on-error: true
      
    - name: Lint JavaScript
      run: npm run lint:js || true
      
    - name: Validate HTML structure
      run: npm run test:html
      continue-on-error: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm run security:audit

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [lint-and-validate]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create dist directory
      run: mkdir -p dist
      
    - name: Copy files to dist
      run: |
        cp index.html dist/
        cp style.css dist/
        cp script.js dist/
        
    - name: Build project
      run: npm run build
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 30

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: [build-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Start local server
      run: |
        npx live-server dist --port=8080 --no-browser &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        mkdir -p reports
        npx lighthouse http://localhost:8080 --output=html --output-path=reports/lighthouse.html --chrome-flags="--headless --no-sandbox --disable-gpu"
      continue-on-error: true
      
    - name: Upload Lighthouse report
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-report
        path: reports/
        retention-days: 30

  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: [build-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm install -g @axe-core/cli
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Start local server
      run: |
        npx live-server dist --port=8081 --no-browser &
        sleep 5
        
    - name: Run accessibility tests
      run: |
        mkdir -p reports
        npx axe http://localhost:8081 --save reports/accessibility.json
      continue-on-error: true
      
    - name: Upload accessibility report
      uses: actions/upload-artifact@v4
      with:
        name: accessibility-report
        path: reports/
        retention-days: 30

  cross-browser-test:
    name: Cross-Browser Testing
    runs-on: ubuntu-latest
    needs: [build-test]
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Install Playwright
      run: |
        npm install -g playwright
        npx playwright install ${{ matrix.browser }}
        
    - name: Start local server
      run: |
        npx live-server dist --port=8082 --no-browser &
        sleep 5
        
    - name: Run browser tests
      run: |
        mkdir -p reports
        npx playwright screenshot http://localhost:8082 reports/screenshot-${{ matrix.browser }}.png --browser=${{ matrix.browser }}
      continue-on-error: true
      
    - name: Upload browser screenshots
      uses: actions/upload-artifact@v4
      with:
        name: browser-screenshots-${{ matrix.browser }}
        path: reports/
        retention-days: 30
